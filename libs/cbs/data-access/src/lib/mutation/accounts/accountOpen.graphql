mutation setAccountOpenData($id: ID!, $data: DepositLoanAccountInput!) {
  account {
    add(id: $id, data: $data) {
      recordId
      record {
        accountId
        transactionId
        accOpenedDate
        accountName
        accountType
        linkedAccountId
        linkedAccountName
        initialDepositAmount
        charges
        paymentMode
      }
      error {
        ...MutationError
      }
    }
  }
}

mutation setAccountDocumentData(
  $subscriptionId: String!
  $fieldId: String!
  $identifiers: [String!]!
) {
  document {
    Subscription(subscriptionId: $subscriptionId) {
      Upsert(fieldId: $fieldId, identifiers: $identifiers) {
        recordId
      }
    }
  }
}

mutation setMakeDormantAccountActive($accountId: ID!) {
  account {
    makeActive(accountID: $accountId)
  }
}
mutation setupdateSavingsNomineeAccount($NomineeAccountUpdateInput: NomineeAccountUpdateInput!) {
  account {
    updateNomineeAccount(data: $NomineeAccountUpdateInput) {
      recordId
      error {
        ...MutationError
      }
    }
  }
}

mutation setupdateSavingTenure($SavingsTenureUpdateInput: SavingsTenureUpdateInput!) {
  account {
    updateTenure(data: $SavingsTenureUpdateInput) {
      recordId
      error {
        ...MutationError
      }
    }
  }
}

mutation setupdateSignature($accountID: ID!, $data: [String!]!) {
  account {
    updateSignature(accountID: $accountID, data: $data) {
      recordId
      error {
        ...MutationError
      }
    }
  }
}

mutation setupdateInstallmentAmount(
  $accountId: ID!
  $newInstallmentAmount: String!
  $effectiveDate: Localized!
) {
  account {
    updateInstallmentAmount(
      accountId: $accountId
      newInstallmentAmount: $newInstallmentAmount
      effectiveDate: $effectiveDate
    ) {
      recordId
      error {
        ...MutationError
      }
    }
  }
}

mutation issueFDCertificate($accountId: ID!) {
  account {
    issueFDCertificate(accountId: $accountId)
  }
}

mutation updateSavingsLoanAccountName(
  $accountId: ID!
  $name: String!
  $accountType: AccountTypeFilter!
) {
  account {
    updateAccountName(accountID: $accountId, name: $name, accountType: $accountType) {
      recordId
      error {
        ...MutationError
      }
    }
  }
}
