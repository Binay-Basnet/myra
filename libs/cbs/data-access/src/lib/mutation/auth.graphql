#mutation login($data: LoginInput!) {
#  auth {
#    login(data: $data) {
#      recordId
#      record {
#        token {
#          access
#          refresh
#        }
#        data {
#          branches {
#            id
#            name
#          }
#          rolesList {
#            id
#            name
#          }
#          permission {
#            myPermission
#          }
#          preference {
#            language
#            languageCode
#            date
#          }
#          user {
#            ...User
#          }
#        }
#      }
#      error {
#        ...MutationError
#      }
#    }
#  }
#}
#
#mutation refresh($refreshToken: String!) {
#  auth {
#    token(refreshToken: $refreshToken) {
#      token {
#        access
#        refresh
#      }
#      error {
#        ...MutationError
#      }
#    }
#  }
#}

mutation resetPassword($userId: String!, $newPassword: String!, $oldPassword: String!) {
  user {
    resetPassword(data: { userId: $userId, newPassword: $newPassword, oldPassword: $oldPassword }) {
      recordId
      error {
        ...MutationError
      }
    }
  }
}

mutation setRecoveryPassword($email: String!, $url: String!) {
  user {
    passwordRecovery {
      sendRecoveryEmail(data: { email: $email, url: $url }) {
        recordID
        error {
          ...MutationError
        }
      }
    }
  }
}

mutation setNewPassword($token: String!, $newPassword: String!) {
  user {
    passwordRecovery {
      setNewPassword(data: { token: $token, newPassword: $newPassword }) {
        recordID
        error {
          ...MutationError
        }
      }
    }
  }
}

mutation switchRole($role: String, $branch: String) {
  auth {
    switchRole(role: $role, branchId: $branch) {
      data {
        token {
          access
          refresh
        }
        me {
          branches {
            id
            name
          }
          rolesList {
            id
            name
          }
          permission {
            myPermission
          }
          preference {
            language
            languageCode
            date
          }
          user {
            ...User
          }
        }
      }
    }
  }
}
