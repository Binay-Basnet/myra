mutation setDepositProduct($id: ID!, $data: DepositProductInput, $edit: Boolean) {
  settings {
    general {
      depositProduct {
        add(id: $id, data: $data, edit: $edit) {
          recordId
          record {
            id
            productCode
            productName
            createdDate
            interest
          }
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation setDepositProductInactive($data: DepositProductInactiveData) {
  settings {
    general {
      depositProduct {
        makeInactive(data: $data) {
          recordId
        }
      }
    }
  }
}

mutation activateSavingsProduct(
  $productId: ID!
  $productType: AccountTypeFilter!
  $remarks: String!
) {
  settings {
    general {
      depositProduct {
        activateProduct(productId: $productId, productType: $productType, remarks: $remarks) {
          recordId
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateSavingProductInterestRate($productId: ID!, $data: InterestRateSetupInput!) {
  settings {
    general {
      depositProduct {
        updateProductInterest(productId: $productId, data: $data) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation editSavingProductInterestRate($id: ID!, $productId: ID!, $data: InterestRateSetupInput!) {
  settings {
    general {
      depositProduct {
        editProductInterest(id: $id, productId: $productId, data: $data) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation editSavingProductBalanceLimit(
  $productId: ID!
  $productType: AccountTypeFilter!
  $data: AmountLimit!
) {
  settings {
    general {
      depositProduct {
        editBalanceLimit(productId: $productId, productType: $productType, data: $data) {
          recordId
          error {
            ...MutationError
          }
        }
      }
    }
  }
}
