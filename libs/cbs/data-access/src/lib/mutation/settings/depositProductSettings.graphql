mutation setDepositProduct($id: ID!, $data: DepositProductInput, $edit: Boolean) {
  settings {
    general {
      depositProduct {
        add(id: $id, data: $data, edit: $edit) {
          recordId
          record {
            id
            productCode
            productName
            createdDate
            interest
          }
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation setDepositProductInactive($data: DepositProductInactiveData) {
  settings {
    general {
      depositProduct {
        makeInactive(data: $data) {
          recordId
        }
      }
    }
  }
}

mutation activateSavingsProduct(
  $productId: ID!
  $productType: AccountTypeFilter!
  $remarks: String!
) {
  settings {
    general {
      depositProduct {
        activateProduct(productId: $productId, productType: $productType, remarks: $remarks) {
          recordId
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateSavingProductInterestRate($productId: ID!, $data: InterestRateSetupInput!) {
  settings {
    general {
      depositProduct {
        updateProductInterest(productId: $productId, data: $data) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation editSavingProductInterestRate($id: ID!, $productId: ID!, $data: InterestRateSetupInput!) {
  settings {
    general {
      depositProduct {
        editProductInterest(id: $id, productId: $productId, data: $data) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation editSavingProductBalanceLimit(
  $productId: ID!
  $productType: AccountTypeFilter!
  $data: AmountLimit!
) {
  settings {
    general {
      depositProduct {
        editBalanceLimit(productId: $productId, productType: $productType, data: $data) {
          recordId
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateSavingProductPenalty(
  $id: ID
  $productId: ID!
  $payload: PenaltyTypeInput!
  $additionalData: ProductChargeAdditionalDataInput!
) {
  settings {
    general {
      depositProduct {
        updatePenaltyCharge(
          id: $id
          productId: $productId
          payload: $payload
          additionalData: $additionalData
        ) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateOpenCharge(
  $id: ID
  $productId: ID!
  $payload: [ServiceType!]!
  $additionalData: ProductChargeAdditionalDataInput!
) {
  settings {
    general {
      depositProduct {
        updateOpenCharge(
          id: $id
          productId: $productId
          payload: $payload
          additionalData: $additionalData
        ) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateCloseCharge(
  $id: ID
  $productId: ID!
  $payload: [ServiceType!]!
  $additionalData: ProductChargeAdditionalDataInput!
) {
  settings {
    general {
      depositProduct {
        updateCloseCharge(
          id: $id
          productId: $productId
          payload: $payload
          additionalData: $additionalData
        ) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation editChequeSettings(
  $productId: ID!
  $isChequeIssueAllowed: Boolean!
  $chequeCharge: [ServiceType]
) {
  settings {
    general {
      depositProduct {
        editChequeSettings(
          productId: $productId
          ischequeIssueAllowed: $isChequeIssueAllowed
          chequeCharge: $chequeCharge
        ) {
          recordId
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateSavingLoanProductAccountPremium(
  $productId: ID!
  $payload: AccountPremium!
  $productType: AccountTypeFilter!
) {
  settings {
    general {
      depositProduct {
        updateAccountPremium(productId: $productId, payload: $payload, productType: $productType) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateSavingLoanProductTenure(
  $productId: ID!
  $payload: TenureUpdateData!
  $productType: AccountTypeFilter!
) {
  settings {
    general {
      depositProduct {
        updateProductTenure(productId: $productId, payload: $payload, productType: $productType) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateSavingProductPrematurePenalty(
  $productId: ID!
  $allowPenalty: Boolean!
  $payload: PrematurePenalty!
) {
  settings {
    general {
      depositProduct {
        updatePrematurePenalty(
          productId: $productId
          allowPenalty: $allowPenalty
          payload: $payload
        ) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateWithdrawPenalty($productId: ID!, $payload: WithdrawPenalty!) {
  settings {
    general {
      depositProduct {
        updateWithdrawPenalty(productId: $productId, payload: $payload) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateSavingProductRebate(
  $productId: ID!
  $isRebateAllowed: Boolean!
  $payload: RebateTypeInput!
) {
  settings {
    general {
      depositProduct {
        updateRebate(productId: $productId, isRebateAllowed: $isRebateAllowed, payload: $payload) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateMultipleInterestRate($accountId: [ID!]!, $data: InterestRateSetupInput!) {
  account {
    setMultipleAccountInterest(accountId: $accountId, data: $data) {
      record
      error {
        ...MutationError
      }
    }
  }
}
