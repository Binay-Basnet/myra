mutation setLoanProduct($id: ID!, $data: LoanProductInput, $edit: Boolean) {
  settings {
    general {
      loanProducts {
        upsert(id: $id, data: $data, edit: $edit) {
          recordId
          record {
            id
            objState
            productName
            productType
          }
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation setLoanProductInactive($data: LoanProductInactiveData) {
  settings {
    general {
      loanProducts {
        makeInactive(data: $data) {
          recordId
        }
      }
    }
  }
}

mutation setProductActive($productId: ID!, $productType: AccountTypeFilter!, $remarks: String!) {
  settings {
    general {
      depositProduct {
        activateProduct(productId: $productId, productType: $productType, remarks: $remarks) {
          recordId
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateLoanProductInterestRate($productId: ID!, $data: InterestRateSetupInput!) {
  settings {
    general {
      loanProducts {
        updateProductInterest(productId: $productId, data: $data) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation editLoanProductInterestRate($id: ID!, $productId: ID!, $data: InterestRateSetupInput!) {
  settings {
    general {
      loanProducts {
        editProductInterest(id: $id, productId: $productId, data: $data) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateLoanProductPenalty(
  $id: ID
  $productId: ID!
  $payload: PenaltyTypeInput!
  $additionalData: ProductChargeAdditionalDataInput!
) {
  settings {
    general {
      loanProducts {
        updatePenaltyCharge(
          id: $id
          productId: $productId
          payload: $payload
          additionalData: $additionalData
        ) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateLoanProductProcessingCharge(
  $id: ID
  $productId: ID!
  $payload: [ServiceType!]!
  $additionalData: ProductChargeAdditionalDataInput!
) {
  settings {
    general {
      loanProducts {
        updateProcessingCharge(
          id: $id
          productId: $productId
          payload: $payload
          additionalData: $additionalData
        ) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation updateLoanProductRebate(
  $id: ID
  $productId: ID!
  $payload: RebateTypeInput!
  $additionalData: ProductChargeAdditionalDataInput!
) {
  settings {
    general {
      loanProducts {
        updateRebateCharge(
          id: $id
          productId: $productId
          payload: $payload
          additionalData: $additionalData
        ) {
          record
          error {
            ...MutationError
          }
        }
      }
    }
  }
}
