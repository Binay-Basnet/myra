mutation setLoanProduct($id: ID!, $data: LoanProductInput) {
  settings {
    general {
      loanProducts {
        upsert(id: $id, data: $data) {
          recordId
          record {
            id
            objState
            productName
            productType
          }
          error {
            ...MutationError
          }
        }
      }
    }
  }
}

mutation setLoanProductInactive($data: LoanProductInactiveData) {
  settings {
    general {
      loanProducts {
        makeInactive(data: $data) {
          recordId
        }
      }
    }
  }
}

mutation setProductActive($productId: ID!, $productType: AccountTypeFilter!, $remarks: String!) {
  settings {
    general {
      depositProduct {
        activateProduct(productId: $productId, productType: $productType, remarks: $remarks) {
          recordId
          error {
            ...MutationError
          }
        }
      }
    }
  }
}
