query getAccountMemberList($filter: Filter, $pagination: Pagination) {
  members {
    list(pagination: $pagination, filter: $filter) {
      totalCount
      edges {
        node {
          id
          name
          code
          type
          address {
            state
            district
            localGovernment
            wardNo
            locality
          }
          contact
          createdAt
          dateJoined
        }
        cursor
      }
      pageInfo {
        startCursor
        endCursor
      }
    }
  }
}

query getProductList($memberId: ID!) {
  settings {
    general {
      depositProduct {
        getProductList(memberId: $memberId) {
          allowed {
            id
            productName
            nature
          }
          notAllowed {
            data {
              id
              productName
              nature
            }
            error
          }
        }
      }
    }
  }
}

query getAccountOpenProductDetails($id: ID!) {
  settings {
    general {
      depositProduct {
        formState(id: $id) {
          data {
            productName
            nature
            productCode {
              prefix
              initialNo
            }
            typeOfMember
            criteria
            minAge
            maxAge
            genderId
            maritalStatusId
            educationQualification
            ethnicity
            occupation
            isMandatorySaving
            foreignEmployment
            natureOfBusinessInstitution
            natureOFBusinessCoop
            cooperativeType
            depositAmount {
              minAmount
              maxAmount
            }
            depositFrequency
            penalty
            penaltyData {
              dayAfterInstallmentDate
              penaltyRate
              penaltyAmount
              penaltyLedgerMapping
            }
            fixedDepositAmountLimit {
              avgAmount
              maxAmount
              minAmount
            }
            rebate
            rebateData {
              dayBeforeInstallmentDate
              noOfInstallment
              rebateAmount
              rebateRate
              rebateLedgerMapping
            }

            tenureUnit
            isTenureApplicable
            minTenureUnitNumber
            maxTenureUnitNumber
            balanceLimit {
              minAmount
              maxAmount
              avgAmount
            }
            interest {
              minRate
              maxRate
              defaultRate
              ceoAuthority
              boardAuthority
              additionalRate
            }
            ladderRate
            ladderRateData {
              type
              amount
              rate
            }
            postingFrequency
            maxPostingFreqDifference
            noOftransactionAllowed
            accountType
            serviceCharge {
              serviceName
              ledgerName
              amount
            }
            accountCloseCharge {
              serviceName
              ledgerName
              amount
            }
            alternativeChannelCharge {
              serviceName
              ledgerName
              amount
            }
            atmCharge {
              serviceName
              ledgerName
              amount
            }
            dormantSetup {
              duration
              condition
            }
            withdrawAmountLimit {
              minAmount
              maxAmount
              avgAmount
            }
            autoOpen
            allowLoan
            chequeIssue
            chequeCharge {
              serviceName
              ledgerName
              amount
            }
            percentageOfDeposit
            alternativeChannels
            atmFacility
            isForMinors
            #            chequeIssue
            supportMultiple
            staffProduct
            withdrawRestricted
            specifyWithdrawRestriction
            wealthBuildingProduct
            individualDocuments
            institutionDocuments
            prematurePenalty {
              penaltyDateType
              noOfDays
              penaltyLedgerMapping
              penaltyAmount
              penaltyRate
            }
            productPremiumInterest
          }
        }
      }
    }
  }
}

query getAccountOpenEditData($id: ID!) {
  account {
    formState(id: $id) {
      data {
        memberId
        productId
        accountName
        minor
        tenure
        interestDoc {
          identifier
          url
        }
        tenureNumber
        initialDepositAmount
        defaultAmountDepositAccountName
        interestRate
        interestAuthority
        installmentAmount
        depositFrequencyWeekly
        depositFrequencyMonthly
        depositFrequencyDay
        depositFrequencyFrequencyDay
        depositFrequencyDayOfWeek
        serviceCharge {
          name
          amount
        }
        depositFrequencyYearlyMonth
        depositFrequencyYearlyDay
        mobileBanking
        eBanking
        atmFacility
        smsBanking
        chequeFacility
        agentId
      }
    }
  }
}

query getAccountTableList($paginate: Pagination, $filter: Filter) {
  account {
    list(paginate: $paginate, filter: $filter) {
      totalCount
      pageInfo {
        hasNextPage
        hasPreviousPage
        startCursor
        endCursor
      }
      edges {
        node {
          id
          objState
          createdAt
          accountName
          # createdBy {
          #   id
          #   # name
          #   # username
          #   # userType
          # }
          modifiedAt
          # modifiedBy {
          #   id
          #   # name
          #   # username
          #   # userType
          # }
          installmentAmount
          balance
          availableBalance
          accountOpenedDate
          lastTransactionDate
          accountExpiryDate
          closedAt
          member {
            id
            name
            profilePicUrl
            profilePic
            signaturePicUrl
            address {
              state
              district
              localGovernment
              wardNo
              locality
              houseNo
              coordinates {
                longitude
                latitude
              }
            }
            contact
            dateJoined
          }
          overDrawnBalance
          guaranteedAmount
          interestAccured
          interestTax
          product {
            id
            productCode
            productName
            nature
            minimumBalance
            isMandatorySaving
            withdrawRestricted
            accountClosingCharge {
              serviceName
              ledgerName
              amount
            }
            withdrawPenalty {
              penaltyLedgerMapping
              penaltyAmount
              penaltyRate
            }
            interest
          }
          dues {
            fine
            totalDue
            dueInstallments
          }
          prematurePenalty
          installmentAmount
        }
      }
    }
  }
}

query getAccountTableListMinimal($paginate: Pagination, $filter: Filter) {
  account {
    list(paginate: $paginate, filter: $filter) {
      totalCount
      pageInfo {
        hasNextPage
        hasPreviousPage
        startCursor
        endCursor
      }
      edges {
        node {
          id
          objState
          createdAt
          accountName
          balance

          accountOpenedDate
          accountExpiryDate
          closedAt
          member {
            id
            name
            code
            profilePicUrl
          }
          product {
            id
            productCode
            productName
            nature
            interest
            isMandatorySaving
          }
          installmentAmount
          groupName
        }
      }
    }
  }
}

query getAccountDocumentsList($subscriptionId: String!) {
  document {
    listSubscriptionDocuments(subscriptionId: $subscriptionId) {
      data {
        fieldId
        docData {
          identifier
          url
        }
      }
    }
  }
}

query getAccountOpenProductCriteria($productId: ID!) {
  settings {
    general {
      depositProduct {
        getProductCriteria(productId: $productId) {
          data {
            gender
            minAge
            maxAge
            ethnicity
            educationQualification
            maritalStatus
            foreignEmployment
            occupation
            institutionType
            cooperativeUnion
            cooperativeType
          }
        }
      }
    }
  }
}
query getAccountOpenProductPenalty($productId: ID!) {
  settings {
    general {
      depositProduct {
        getPenaltyRebateInfo(productId: $productId) {
          data {
            penalty {
              dayAfterInstallmentDate
              penaltyRate
              penaltyAmount
              penaltyLedgerMapping
            }
            rebate {
              dayBeforeInstallmentDate
              rebateRate
              rebateAmount
              rebateLedgerMapping
              noOfInstallment
            }
            prematurePenalty {
              penaltyDateType
              noOfDays
              penaltyLedgerMapping
              penaltyAmount
              penaltyRate
            }
            withdrawPenalty {
              penaltyLedgerMapping
              penaltyAmount
              penaltyRate
            }
          }
        }
      }
    }
  }
}

query getAccountOpenMinorList($memberId: ID!) {
  account {
    listMinors(memberId: $memberId) {
      data {
        id
        fullName
        familyMemberId
      }
    }
  }
}

query getInstallmentsListData($id: ID!, $from: String, $to: String, $fromN: Int, $toN: Int) {
  account {
    getInstallments(id: $id, from: $from, to: $to, fromN: $fromN, toN: $toN) {
      data {
        number
        dueDate
        status
        monthName
        fine
        rebate
      }
      error {
        ...QueryError
      }
    }
  }
}

query getBulkInstallmentsData($ids: [ID]!) {
  account {
    getBulkInstallments(ids: $ids) {
      totalFine

      accountId
      value {
        data {
          dueDate
          status
          monthName
          fine
          rebate
        }
      }
    }
  }
}

query getDefaultAccountList($productId: ID!, $memberId: ID!, $groupId: String) {
  account {
    listDefaultAccounts(memberId: $memberId, productId: $productId, groupId: $groupId) {
      data {
        id
        accountName

        productId
      }
    }
  }
}

query getAccountDetailsData($id: ID!) {
  account {
    accountDetails(id: $id) {
      data {
        accountId
        objState
        member {
          id
          name
          code
          profilePicUrl
          profilePic
          signaturePicUrl

          address {
            state
            district
            localGovernment
            wardNo
            locality
            houseNo
            coordinates {
              longitude
              latitude
            }
          }
          contact
          dateJoined
        }
        nomineeAccountNumber
        nomineeAccountName
        productId
        installmentAmount
        accountName
        availableBalance
        accountTenure
        productName
        accountOpenDate
        accountType
        minorName
        defaultAccountType
        accountBalance
        totalDepositBalance
        interestAccrued
        interestEarned
        guaranteedAmount
        accountBranch
        alternativeChannel
        allowLoan
        withdrawRestricted
        supportMultiple
        staffProduct
        atmFacility
        chequeIssue
        allowPartialInstallment
        monthlyInterestCompulsory
        isForMinors
        autoOpen
        isMandatory
        interestRate
        product {
          id
          productCode
          productName
          nature
          minimumBalance
          isMandatorySaving
          withdrawRestricted
          accountClosingCharge {
            serviceName
            ledgerName
            amount
          }
          withdrawPenalty {
            penaltyLedgerMapping
            penaltyAmount
            penaltyRate
          }
          interest
          depositFrequency
        }
        dues {
          fine
          totalDue
          dueInstallments
        }
        prematurePenalty
        interestTax
        overDrawnBalance
        lastTransactionDate
        accountExpiryDate
        closedAt
        transactionConstraints {
          blockId
          transactionType
          effectiveSince
          effectiveTill
        }
        lastInstallmentUpdatedDate
      }
    }
  }
}

query getAccountTransactionLists($filter: AccountsTransactionFilter!, $pagination: Pagination!) {
  account {
    listTransactions(filter: $filter, paginate: $pagination) {
      edges {
        node {
          id
          transactionId
          accountId
          name
          date
          month
          transactionDirection
          transactionType
          amount
          currentBalance
          debit
          credit
          balanceType
        }
      }
      totalCount
      pageInfo {
        endCursor
        startCursor
        hasNextPage
        hasPreviousPage
      }
      summary {
        totalDeposit
        totalWithdraw
        averageBalance
      }
    }
  }
}

query getAccountLedgersList($accountId: ID!) {
  account {
    listAccountLedgers(id: $accountId) {
      data {
        ledgerId
        ledgerName
        accountType
        balance
        balanceType
      }
    }
  }
}

query getAllAccounts($paginate: Pagination, $filter: Filter, $isHoldings: Boolean) {
  allAccounts {
    list(paginate: $paginate, filter: $filter, isHoldings: $isHoldings) {
      totalCount
      edges {
        node {
          ID
          member {
            name
          }
          accountName
          productName
          accountType
          accountOpenDate
          ledgerId
          serviceCenter
          ledgerBalance
        }
        cursor
      }
      pageInfo {
        ...Pagination
      }
    }
  }
}

query listAssociatedGuaranteeAccounts($accountId: ID!) {
  account {
    listAssociatedGuaranteeAccounts(id: $accountId) {
      data {
        memberName
        memberId
        accountName
        loanAccountId
        amount
      }
      total
      error {
        ...QueryError
      }
    }
  }
}

query getSavingFilterMapping {
  account {
    filterMapping {
      productID {
        label
        value
      }
    }
  }
}

query listAccountInterestRateList($accountId: ID!) {
  account {
    listAccountInterestRates(accountId: $accountId) {
      data {
        id
        rate
        createdAt
        effectiveDate
      }
    }
  }
}

query getAccountInterestRateDetail($id: ID!, $accountId: String!) {
  account {
    getAccountInterestRate(id: $id, accountID: $accountId) {
      data {
        id
        rate
        createdAt
        effectiveDate
        fileUploads {
          identifier
          url
        }
        note
      }
    }
  }
}

query getAllAccountsFilterMapping {
  allAccounts {
    filterMapping {
      accountType {
        ...OptionType
      }
      productName {
        ...OptionType
      }
    }
  }
}
