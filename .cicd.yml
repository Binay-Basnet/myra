kind: pipeline
name: Build all the apps
type: docker

platform:
  arch: amd64
  os: linux

steps:
- name: build affected modules
  image: node:16
  volumes:
  - name: node_modules
    path: /drone/src/node_modules
  - name: commit-sha
    path: /drone/previous-success-build-commit-sha
  - name: env-file-erp
    path: /drone/src/apps/myra/.env
  - name: env-file-ebanking
    path: /drone/src/apps/ebanking/.env
  - name: env-file-neosys
    path: /drone/src/apps/neosys-admin/.env
  - name: ebanking-app
    path: /drone/src/apps/ebanking/dist
  - name: myra-app
    path: /drone/src/apps/myra/dist
  - name: neosys-admin-app
    path: /drone/src/apps/neosys-admin/dist
  commands:
  - yarn --pure-lockfile
  - npx nx affected --target=build --parallel --base=$(cat /drone/previous-success-build-commit-sha) --head=HEAD --verbose

volumes:
- name: node_modules
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/node_modules
- name: commit-sha
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/previous-success-build-commit-sha
- name: env-file-erp
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/.env.erp
- name: env-file-ebanking
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/.env.ebanking
- name: env-file-neosys
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/.env.neosys
- name: ebanking-app
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/ebanking-app
- name: myra-app
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/myra-app
- name: neosys-admin-app
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/neosys-admin-app

trigger:
  branch:
  - dev
  event:
  - push

---

#kind: pipeline
#name: Build storybook
#type: docker
#
#platform:
#  arch: amd64
#  os: linux
#
#steps:
#- name: build storybook
#  image: node:16
#  volumes:
#  - name: node_modules
#    path: /drone/src/node_modules
#  - name: commit-sha
#    path: /drone/previous-success-build-commit-sha
#  - name: storybook-build
#    path: /drone/src/dist
#  commands:
#  - yarn
#  - npx nx affected --target=build-storybook --parallel --base=$(cat /drone/previous-success-build-commit-sha) --head=HEAD
#
#volumes:
#- name: node_modules
#  host:
#    path: /build-cache/myra-ui-${DRONE_BRANCH}/node_modules
#- name: commit-sha
#  host:
#    path: /build-cache/myra-ui-${DRONE_BRANCH}/previous-success-build-commit-sha
#- name: storybook-build
#  host:
#    path: /build-cache/myra-ui-${DRONE_BRANCH}/storybook
#depends_on:
#- Build all the apps
#
#trigger:
#  branch:
#  - dev
#  event:
#  - push
#
#---

kind: pipeline
name: Publish myra-app
type: docker

platform:
  arch: amd64
  os: linux

steps:
- name: publishing myra-app
  image: bentolor/docker-dind-awscli:dind
  environment:
    aws_access_key:
      from_secret: aws_access_key
    aws_secret_key:
      from_secret: aws_secret_key
  commands:
  - aws configure set aws_access_key_id $aws_access_key
  - aws configure set aws_secret_access_key $aws_secret_key
  - aws ecr get-login-password --region ap-south-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.ap-south-1.amazonaws.com
  - docker compose -f docker-compose.${DRONE_BRANCH}.yaml build myra
  - docker compose -f docker-compose.${DRONE_BRANCH}.yaml push myra
  volumes:
  - name: myra-app
    path: /drone/src/apps/myra/dist
  - name: docker-sock
    path: /var/run/docker.sock

volumes:
- name: myra-app
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/myra-app
- name: docker-sock
  host:
    path: /var/run/docker.sock

depends_on:
- Build all the apps

trigger:
  branch:
  - dev
  event:
  - push

---

kind: pipeline
name: Publish neosys-admin-app
type: docker

platform:
  arch: amd64
  os: linux

steps:
- name: publishing neosys-admin-app
  image: bentolor/docker-dind-awscli:dind
  environment:
    aws_access_key:
      from_secret: aws_access_key
    aws_secret_key:
      from_secret: aws_secret_key
  commands:
  - aws configure set aws_access_key_id $aws_access_key
  - aws configure set aws_secret_access_key $aws_secret_key
  - aws ecr get-login-password --region ap-south-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.ap-south-1.amazonaws.com
  - docker compose -f docker-compose.${DRONE_BRANCH}.yaml build neosys-admin
  - docker compose -f docker-compose.${DRONE_BRANCH}.yaml push neosys-admin
  volumes:
  - name: neosys-admin-app
    path: /drone/src/apps/neosys-admin/dist
  - name: docker-sock
    path: /var/run/docker.sock

volumes:
- name: neosys-admin-app
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/neosys-admin-app
- name: docker-sock
  host:
    path: /var/run/docker.sock

depends_on:
- Build all the apps

trigger:
  branch:
  - dev
  event:
  - push

---

kind: pipeline
name: Publish ebanking-app
type: docker

platform:
  arch: amd64
  os: linux

steps:
- name: publishing ebanking-app
  image: bentolor/docker-dind-awscli:dind
  environment:
    aws_access_key:
      from_secret: aws_access_key
    aws_secret_key:
      from_secret: aws_secret_key
  commands:
  - aws configure set aws_access_key_id $aws_access_key
  - aws configure set aws_secret_access_key $aws_secret_key
  - aws ecr get-login-password --region ap-south-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.ap-south-1.amazonaws.com
  - docker compose -f docker-compose.${DRONE_BRANCH}.yaml build ebanking
  - docker compose -f docker-compose.${DRONE_BRANCH}.yaml push ebanking
  volumes:
  - name: ebanking-app
    path: /drone/src/apps/ebanking/dist
  - name: docker-sock
    path: /var/run/docker.sock

volumes:
- name: ebanking-app
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/ebanking-app
- name: docker-sock
  host:
    path: /var/run/docker.sock

depends_on:
- Build all the apps

trigger:
  branch:
  - dev
  event:
  - push

---

#kind: pipeline
#name: Publish storybook
#type: docker
#
#platform:
#  arch: amd64
#  os: linux
#
#steps:
#- name: publishing storybook
#  image: plugins/ecr
#  settings:
#    cache_from:
#    - 110278083494.dkr.ecr.ap-south-1.amazonaws.com/storybook:${DRONE_BRANCH}
#    access_key:
#      from_secret: aws_access_key
#    secret_key:
#      from_secret: aws_secret_key
#    repo: storybook
#    registry: 110278083494.dkr.ecr.ap-south-1.amazonaws.com
#    region: ap-south-1
#    tags: dev
#    dockerfile: /drone/src/Dockerfile.storybook
#  volumes:
#  - name: storybook
#    path: /drone/src/dist
#  - name: docker-sock
#    path: /var/run/docker.sock
#
#volumes:
#- name: storybook
#  host:
#    path: /build-cache/myra-ui-${DRONE_BRANCH}/storybook
#- name: docker-sock
#  host:
#    path: /var/run/docker.sock
#
#depends_on:
#- Build storybook
#
#trigger:
#  branch:
#  - dev
#  event:
#  - push
#
#---

kind: pipeline
type: exec
name: Deploy new build

platform:
  arch: amd64
  os: linux

steps:
- name: Run the script to deploy new build
  commands:
  - cd /drone
  - ./cd.fe.sh $DRONE_COMMIT_SHA
  when:
    branch:
    - dev
    event:
    - push

depends_on:
- Publish myra-app
- Publish neosys-admin-app
- Publish ebanking-app
#- Publish storybook

trigger:
  branch:
  - dev
  event:
  - push

---

#kind: pipeline
#type: ssh
#name: Pull images and deploy all the apps
#
#server:
#  host:
#    from_secret: hostname
#  user:
#    from_secret: host_user
#  ssh_key:
#    from_secret: ssh_key
#
#steps:
#  - name: deploy all the apps
#    environment:
#      access_key:
#        from_secret: aws_access_key
#      secret_key:
#        from_secret: aws_secret_key
#    commands:
#      - cp /apps/myra-ui-${DRONE_BRANCH}/.env .
#      - aws configure set aws_access_key_id $access_key
#      - aws configure set aws_secret_access_key $secret_key
#      - aws ecr get-login-password --region ap-south-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.ap-south-1.amazonaws.com
#      - docker-compose -f docker-compose.neosys.yml pull
#      - docker-compose -f docker-compose.ebanking.yml pull
#      - docker-compose -f docker-compose.myra.yml pull
#      - docker-compose -f docker-compose.storybook.yml pull
#      - docker-compose --project-name myra-ui-neosys-${DRONE_BRANCH} -f docker-compose.neosys.yml up --no-build --force-recreate -d
#      - docker-compose --project-name myra-ui-ebanking-${DRONE_BRANCH} -f docker-compose.ebanking.yml up --no-build --force-recreate -d
#      - docker-compose --project-name myra-ui-myra-${DRONE_BRANCH} -f docker-compose.myra.yml up --no-build --force-recreate -d
#      - docker-compose --project-name myra-ui-storybook -f docker-compose.storybook.yml up --no-build --force-recreate -d
#      - docker image prune -a -f || true
#      - docker container prune -a -f || true
#
#depends_on:
#  - Publish myra-app
#  - Publish neosys-admin-app
#  - Publish ebanking-app
#  - Publish storybook
#
#trigger:
#  branch:
#    - dev
#  event:
#    - push
#
#---

kind: pipeline
type: docker
name: Update last successful build commit SHA

steps:
- name: update content in host file
  image: alpine:latest
  volumes:
  - name: commit-sha
    path: /drone/previous-success-build-commit-sha
  commands:
  - echo $DRONE_COMMIT_SHA > /drone/previous-success-build-commit-sha

volumes:
- name: commit-sha
  host:
    path: /build-cache/myra-ui-${DRONE_BRANCH}/previous-success-build-commit-sha

depends_on:
- Deploy new build
trigger:
  branch:
  - dev
  event:
  - push

---
#########################################################################################################
#########################################################################################################
###############                               PROD PIPELINE                               ###############
#########################################################################################################
#########################################################################################################

kind: pipeline
name: Build and Push myra
type: docker

platform:
  arch: amd64
  os: linux

steps:
  - name: Build myra-ui
    image: node:16
    volumes:
      - name: myra-env-${DRONE_BRANCH}
        path: /drone/src/apps/myra/.env
      - name: docker-sock
        path: /var/run/docker.sock
      - name: myra-app
        path: /drone/src/apps/myra/dist
    commands:
      - yarn --pure-lockfile
      - npx nx run myra:build:production

  - name: Publish myra-ui
    image: bentolor/docker-dind-awscli:dind
    environment:
      aws_access_key:
        from_secret: aws_access_key
      aws_secret_key:
        from_secret: aws_secret_key
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
      - name: myra-app
        path: /drone/src/apps/myra/dist
    commands:
      - aws configure set aws_access_key_id $aws_access_key
      - aws configure set aws_secret_access_key $aws_secret_key
      - aws ecr get-login-password --region ap-south-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.ap-south-1.amazonaws.com
      - docker compose -f docker-compose.${DRONE_BRANCH}.yaml build myra
      - docker compose -f docker-compose.${DRONE_BRANCH}.yaml push myra

volumes:
  - name: myra-env-${DRONE_BRANCH}
    host:
      path: /build-cache/myra-ui-${DRONE_BRANCH}/.env.erp
  - name: docker-sock
    host:
      path: /var/run/docker.sock
  - name: myra-app
    temp: {}

trigger:
  branch:
    - main
  event:
    - tag

---

kind: pipeline
name: Build and Push neosys
type: docker

platform:
  arch: amd64
  os: linux

steps:
  - name: Build neosys-ui
    image: node:16
    volumes:
      - name: myra-env-${DRONE_BRANCH}
        path: /drone/src/apps/neosys-admin/.env
      - name: docker-sock
        path: /var/run/docker.sock
      - name: neosys-app
        path: /drone/src/apps/neosys-admin/dist
    commands:
      - yarn
      - npx nx run neosys-admin:build:production

  - name: Publish neosys-ui
    image: bentolor/docker-dind-awscli:dind
    environment:
      aws_access_key:
        from_secret: aws_access_key
      aws_secret_key:
        from_secret: aws_secret_key
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
      - name: neosys-app
        path: /drone/src/apps/neosys-admin/dist
    commands:
      - aws configure set aws_access_key_id $aws_access_key
      - aws configure set aws_secret_access_key $aws_secret_key
      - aws ecr get-login-password --region ap-south-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.ap-south-1.amazonaws.com
      - docker compose -f docker-compose.${DRONE_BRANCH}.yaml build neosys-admin
      - docker compose -f docker-compose.${DRONE_BRANCH}.yaml push neosys-admin

volumes:
  - name: myra-env-${DRONE_BRANCH}
    host:
      path: /build-cache/myra-ui-${DRONE_BRANCH}/.env.neosys
  - name: docker-sock
    host:
      path: /var/run/docker.sock
  - name: neosys-app
    temp: {}

trigger:
  branch:
    - main
  event:
    - tag

---

kind: pipeline
name: Build and Push ebanking
type: docker

platform:
  arch: amd64
  os: linux

steps:
  - name: Build ebanking-ui
    image: node:16
    volumes:
      - name: myra-env-${DRONE_BRANCH}
        path: /drone/src/apps/ebanking/.env
      - name: docker-sock
        path: /var/run/docker.sock
      - name: ebanking-app
        path: /drone/src/apps/ebanking/dist
    commands:
      - yarn
      - npx nx run ebanking:build:production

  - name: Publish ebanking-ui
    image: bentolor/docker-dind-awscli:dind
    environment:
      aws_access_key:
        from_secret: aws_access_key
      aws_secret_key:
        from_secret: aws_secret_key
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
      - name: ebanking-app
        path: /drone/src/apps/ebanking/dist
    commands:
      - aws configure set aws_access_key_id $aws_access_key
      - aws configure set aws_secret_access_key $aws_secret_key
      - aws ecr get-login-password --region ap-south-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.ap-south-1.amazonaws.com
      - docker compose -f docker-compose.${DRONE_BRANCH}.yaml build ebanking
      - docker compose -f docker-compose.${DRONE_BRANCH}.yaml push ebanking

volumes:
  - name: myra-env-${DRONE_BRANCH}
    host:
      path: /build-cache/myra-ui-${DRONE_BRANCH}/.env.ebanking
  - name: docker-sock
    host:
      path: /var/run/docker.sock
  - name: ebanking-app
    temp: {}

trigger:
  branch:
    - main
  event:
    - tag



#########################################################################################################
#########################################################################################################
###############                               M I G R A T I O N                               ###########
#########################################################################################################
#########################################################################################################

---

kind: pipeline
name: Build and Push migration
type: docker

platform:
  arch: amd64
  os: linux

steps:
  - name: build from migration
    image: node:16-alpine
    volumes:
      - name: env file
        path: /drone/src/apps/migration/.env
      - name: env file
        path: /drone/src/apps/.env
      - name: migration-app
        path: /drone/src/apps/migration/dist
    commands:
      - yarn
      - npx nx run migration:build --configuration=production


  - name: Publish migration-ui to ECR
    image: bentolor/docker-dind-awscli:dind
    environment:
      aws_access_key:
        from_secret: aws_access_key
      aws_secret_key:
        from_secret: aws_secret_key
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
      - name: migration-app
        path: /drone/src/apps/migration/dist

    commands:
      - aws configure set aws_access_key_id $aws_access_key
      - aws configure set aws_secret_access_key $aws_secret_key
      - aws ecr get-login-password --region ap-south-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.ap-south-1.amazonaws.com
      - docker compose -f docker-compose.migration.yaml build
      - docker compose -f docker-compose.migration.yaml push

volumes:
  - name: env file
    host:
      path: /build-cache/migration/fe/.env
  - name: docker-sock
    host:
      path: /var/run/docker.sock
  - name: migration-app
    temp: {}

trigger:
  branch:
    - migration
  event:
    - push

#########################################################################################################
#########################################################################################################
###############                           B O X   M I G R A T I O N                           ###########
#########################################################################################################
#########################################################################################################

---

kind: pipeline
name: Build and Push box migration
type: docker

platform:
  arch: amd64
  os: linux

steps:
  - name: build from box migration
    image: node:16-alpine
    volumes:
      - name: env file
        path: /drone/src/apps/csv-viewer/.env
      - name: env file
        path: /drone/src/apps/.env
      - name: migration-app
        path: /drone/src/apps/csv-viewer/dist
    commands:
      - yarn
      - npx nx run csv-viewer:build:production


  - name: Publish box-migration-ui to ECR
    image: bentolor/docker-dind-awscli:dind
    environment:
      aws_access_key:
        from_secret: aws_access_key
      aws_secret_key:
        from_secret: aws_secret_key
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
      - name: box-migration-app
        path: /drone/src/apps/csv-viewer/dist

    commands:
      - aws configure set aws_access_key_id $aws_access_key
      - aws configure set aws_secret_access_key $aws_secret_key
      - aws ecr get-login-password --region ap-south-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.ap-south-1.amazonaws.com
      - docker compose -f docker-compose.csv-viewer.yaml build
      - docker compose -f docker-compose.csv-viewer.yaml push

volumes:
  - name: env file
    host:
      path: /build-cache/box-migration/fe/.env
  - name: docker-sock
    host:
      path: /var/run/docker.sock
  - name: migration-app
    temp: {}

trigger:
  branch:
    - box-migration
  event:
    - push
