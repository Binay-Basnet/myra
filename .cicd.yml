# TODO: add test step before merging to dev
# Trigger pipeline
kind: pipeline
name: Build and Push myra-ui
type: docker

platform:
  arch: amd64
  os: linux

steps:
  - name: publishing myra-ui-main
    failure: ignore
    image: plugins/ecr
    environment:
      PLUGIN_STORAGE_DRIVER: overlay2
      PLUGIN_CACHE_FROM: 110278083494.dkr.ecr.ap-southeast-1.amazonaws.com/myra-ui:main
    settings:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      repo: myra-ui
      registry: 110278083494.dkr.ecr.us-east-1.amazonaws.com
      region: us-east-1
      tags: main
      dockerfile: Dockerfile.myra
      build_args:
        - NX_SCHEMA_PATH=${NX_SCHEMA_PATH}
        - MYRA_CONTAINER_NAME=${MYRA_CONTAINER_NAME}
        - MYRA_PORT=${MYRA_PORT}
        - ADMIN_CONTAINER_NAME=${ADMIN_CONTAINER_NAME}
        - ADMIN_PORT=${ADMIN_PORT}
        - EBANKING_CONTAINER_NAME=${EBANKING_CONTAINER_NAME}
        - EBANKING_PORT=${EBANKING_PORT}
        - STORYBOOK_CONTAINER_NAME=${STORYBOOK_CONTAINER_NAME}
        - STORYBOOK_PORT=${STORYBOOK_PORT}
    when:
      branch:
        - main
      event:
        - push

  - name: publishing myra-ui-dev
    failure: ignore
    image: plugins/ecr
    environment:
      PLUGIN_STORAGE_DRIVER: overlay2
      PLUGIN_CACHE_FROM: 110278083494.dkr.ecr.ap-southeast-1.amazonaws.com/myra-ui:dev
    settings:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      repo: myra-ui
      registry: 110278083494.dkr.ecr.us-east-1.amazonaws.com
      region: us-east-1
      tags: dev
      dockerfile: Dockerfile.myra
      build_args:
        - NX_SCHEMA_PATH=${NX_SCHEMA_PATH_DEV}
        - MYRA_CONTAINER_NAME=${MYRA_CONTAINER_NAME_DEV}
        - MYRA_PORT=${MYRA_PORT_DEV}
        - ADMIN_CONTAINER_NAME=${ADMIN_CONTAINER_NAME_DEV}
        - ADMIN_PORT=${ADMIN_PORT_DEV}
        - EBANKING_CONTAINER_NAME=${EBANKING_CONTAINER_NAME_DEV}
        - EBANKING_PORT=${EBANKING_PORT_DEV}
        - STORYBOOK_CONTAINER_NAME=${STORYBOOK_CONTAINER_NAME_DEV}
        - STORYBOOK_PORT=${STORYBOOK_PORT_DEV}
    when:
      branch:
        - dev
      event:
        - push

---
kind: pipeline
name: Build and push myra-ui-storybook
type: docker

platform:
  arch: amd64
  os: linux

steps:
  - name: publishing storybook-dev
    failure: ignore
    image: plugins/ecr
    environment:
      PLUGIN_STORAGE_DRIVER: overlay2
      PLUGIN_CACHE_FROM: 110278083494.dkr.ecr.ap-southeast-1.amazonaws.com/storybook:dev
    settings:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      repo: storybook
      registry: 110278083494.dkr.ecr.us-east-1.amazonaws.com
      region: us-east-1
      tags: dev
      dockerfile: Dockerfile.storybook
      build_args:
        - NX_SCHEMA_PATH=${NX_SCHEMA_PATH_DEV}
        - MYRA_CONTAINER_NAME=${MYRA_CONTAINER_NAME_DEV}
        - MYRA_PORT=${MYRA_PORT_DEV}
        - ADMIN_CONTAINER_NAME=${ADMIN_CONTAINER_NAME_DEV}
        - ADMIN_PORT=${ADMIN_PORT_DEV}
        - EBANKING_CONTAINER_NAME=${EBANKING_CONTAINER_NAME_DEV}
        - EBANKING_PORT=${EBANKING_PORT_DEV}
        - STORYBOOK_CONTAINER_NAME=${STORYBOOK_CONTAINER_NAME_DEV}
        - STORYBOOK_PORT=${STORYBOOK_PORT_DEV}
    when:
      branch:
        - dev
      event:
        - push

---
kind: pipeline
name: Build and push myra-ui-admin
type: docker

platform:
  arch: amd64
  os: linux

steps:
  - name: publishing myra-ui-admin-main
    failure: ignore
    image: plugins/ecr
    environment:
      PLUGIN_STORAGE_DRIVER: overlay2
      PLUGIN_CACHE_FROM: 110278083494.dkr.ecr.ap-southeast-1.amazonaws.com/myra-ui-admin:main
    settings:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      repo: myra-ui-admin
      registry: 110278083494.dkr.ecr.us-east-1.amazonaws.com
      region: us-east-1
      tags: main
      dockerfile: Dockerfile.neosys-admin
      build_args:
        - NX_SCHEMA_PATH=${NX_SCHEMA_PATH}
        - MYRA_CONTAINER_NAME=${MYRA_CONTAINER_NAME}
        - MYRA_PORT=${MYRA_PORT}
        - ADMIN_CONTAINER_NAME=${ADMIN_CONTAINER_NAME}
        - ADMIN_PORT=${ADMIN_PORT}
        - EBANKING_CONTAINER_NAME=${EBANKING_CONTAINER_NAME}
        - EBANKING_PORT=${EBANKING_PORT}
        - STORYBOOK_CONTAINER_NAME=${STORYBOOK_CONTAINER_NAME}
        - STORYBOOK_PORT=${STORYBOOK_PORT}
    when:
      branch:
        - main
      event:
        - push

  - name: publishing myra-ui-admin-dev
    failure: ignore
    image: plugins/ecr
    environment:
      PLUGIN_STORAGE_DRIVER: overlay2
      PLUGIN_CACHE_FROM: 110278083494.dkr.ecr.ap-southeast-1.amazonaws.com/myra-ui-admin:dev
    settings:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      repo: myra-ui-admin
      registry: 110278083494.dkr.ecr.us-east-1.amazonaws.com
      region: us-east-1
      tags: dev
      dockerfile: Dockerfile.neosys-admin
      build_args:
        - NX_SCHEMA_PATH=${NX_SCHEMA_PATH_DEV}
        - MYRA_CONTAINER_NAME=${MYRA_CONTAINER_NAME_DEV}
        - MYRA_PORT=${MYRA_PORT_DEV}
        - ADMIN_CONTAINER_NAME=${ADMIN_CONTAINER_NAME_DEV}
        - ADMIN_PORT=${ADMIN_PORT_DEV}
        - EBANKING_CONTAINER_NAME=${EBANKING_CONTAINER_NAME_DEV}
        - EBANKING_PORT=${EBANKING_PORT_DEV}
        - STORYBOOK_CONTAINER_NAME=${STORYBOOK_CONTAINER_NAME_DEV}
        - STORYBOOK_PORT=${STORYBOOK_PORT_DEV}
    when:
      branch:
        - dev
      event:
        - push

---
kind: pipeline
name: Build and push myra-ui-ebanking
type: docker

platform:
  arch: amd64
  os: linux

steps:
  - name: publishing myra-ui-ebanking-main
    failure: ignore
    image: plugins/ecr
    environment:
      PLUGIN_STORAGE_DRIVER: overlay2
      PLUGIN_CACHE_FROM: 110278083494.dkr.ecr.ap-southeast-1.amazonaws.com/myra-ui-ebanking:main
    settings:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      repo: myra-ui-ebanking
      registry: 110278083494.dkr.ecr.us-east-1.amazonaws.com
      region: us-east-1
      tags: main
      dockerfile: Dockerfile.ebanking
      build_args:
        - NX_SCHEMA_PATH=${NX_SCHEMA_PATH}
        - MYRA_CONTAINER_NAME=${MYRA_CONTAINER_NAME}
        - MYRA_PORT=${MYRA_PORT}
        - ADMIN_CONTAINER_NAME=${ADMIN_CONTAINER_NAME}
        - ADMIN_PORT=${ADMIN_PORT}
        - EBANKING_CONTAINER_NAME=${EBANKING_CONTAINER_NAME}
        - EBANKING_PORT=${EBANKING_PORT}
        - STORYBOOK_CONTAINER_NAME=${STORYBOOK_CONTAINER_NAME}
        - STORYBOOK_PORT=${STORYBOOK_PORT}
    when:
      branch:
        - main
      event:
        - push

  - name: publishing myra-ui-ebanking-dev
    failure: ignore
    image: plugins/ecr
    environment:
      PLUGIN_STORAGE_DRIVER: overlay2
      PLUGIN_CACHE_FROM: 110278083494.dkr.ecr.ap-southeast-1.amazonaws.com/myra-ui-ebanking:dev
    settings:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      repo: myra-ui-ebanking
      registry: 110278083494.dkr.ecr.us-east-1.amazonaws.com
      region: us-east-1
      tags: dev
      dockerfile: Dockerfile.ebanking
      build_args:
        - NX_SCHEMA_PATH=${NX_SCHEMA_PATH_DEV}
        - MYRA_CONTAINER_NAME=${MYRA_CONTAINER_NAME_DEV}
        - MYRA_PORT=${MYRA_PORT_DEV}
        - ADMIN_CONTAINER_NAME=${ADMIN_CONTAINER_NAME_DEV}
        - ADMIN_PORT=${ADMIN_PORT_DEV}
        - EBANKING_CONTAINER_NAME=${EBANKING_CONTAINER_NAME_DEV}
        - EBANKING_PORT=${EBANKING_PORT_DEV}
        - STORYBOOK_CONTAINER_NAME=${STORYBOOK_CONTAINER_NAME_DEV}
        - STORYBOOK_PORT=${STORYBOOK_PORT_DEV}
    when:
      branch:
        - dev
      event:
        - push

---
kind: pipeline
type: ssh
name: Pull image and deploy

server:
  host:
    from_secret: hostname
  user:
    from_secret: host_user
  ssh_key:
    from_secret: ssh_key

steps:
  - name: Deploy frontend main
    environment:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      nx_schema_path:
        from_secret: NX_SCHEMA_PATH
      myra_container_name:
        from_secret: MYRA_CONTAINER_NAME
      myra_port:
        from_secret: MYRA_PORT
      admin_container_name:
        from_secret: ADMIN_CONTAINER_NAME
      admin_port:
        from_secret: ADMIN_PORT
      ebank_container_name:
        from_secret: EBANKING_CONTAINER_NAME
      ebank_port:
        from_secret: EBANKING_PORT
      storybook_container_name:
        from_secret: STORYBOOK_CONTAINER_NAME
      storybook_port:
        from_secret: STORYBOOK_PORT
    commands:
      - echo "NX_SCHEMA_PATH=$nx_schema_path" >> .env
      - echo "MYRA_CONTAINER_NAME=$myra_container_name" >> .env
      - echo "MYRA_PORT=$myra_port" >> .env
      - echo "ADMIN_CONTAINER_NAME=$admin_container_name" >> .env
      - echo "ADMIN_PORT=$admin_port" >> .env
      - echo "EBANKING_CONTAINER_NAME=$ebank_container_name" >> .env
      - echo "EBANKING_PORT=$ebank_port" >> .env
      - echo "STORYBOOK_CONTAINER_NAME=$storybook_container_name" >> .env
      - echo "STORYBOOK_PORT=$storybook_port" >> .env
      - aws configure set aws_access_key_id $access_key
      - aws configure set aws_secret_access_key $secret_key
      - aws ecr get-login-password --region us-east-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.us-east-1.amazonaws.com
      - docker-compose -f docker-compose.neosys.yml pull
      - docker-compose -f docker-compose.ebanking.yml pull
      - docker-compose -f docker-compose.myra.yml pull
      - docker-compose --project-name myra-ui-neosys-main -f docker-compose.neosys.yml up --no-build --force-recreate -d
      - docker-compose --project-name myra-ui-ebanking-main -f docker-compose.ebanking.yml up --no-build --force-recreate -d
      - docker-compose --project-name myra-ui-myra-main -f docker-compose.myra.yml up --no-build --force-recreate -d
      - echo UI deployed successfully
      - docker image prune -a -f || true
      - docker container prune -a -f || true
    when:
      branch:
        - main
      event:
        - push

  - name: Deploy frontend dev
    environment:
      access_key:
        from_secret: aws_access_key
      secret_key:
        from_secret: aws_secret_key
      nx_schema_path:
        from_secret: NX_SCHEMA_PATH_DEV
      myra_container_name:
        from_secret: MYRA_CONTAINER_NAME_DEV
      myra_port:
        from_secret: MYRA_PORT_DEV
      admin_container_name:
        from_secret: ADMIN_CONTAINER_NAME_DEV
      admin_port:
        from_secret: ADMIN_PORT_DEV
      ebank_container_name:
        from_secret: EBANKING_CONTAINER_NAME_DEV
      ebank_port:
        from_secret: EBANKING_PORT_DEV
      storybook_container_name:
        from_secret: STORYBOOK_CONTAINER_NAME_DEV
      storybook_port:
        from_secret: STORYBOOK_PORT_DEV
    commands:
      - echo "NX_SCHEMA_PATH=$nx_schema_path" >> .env
      - echo "MYRA_CONTAINER_NAME=$myra_container_name" >> .env
      - echo "MYRA_PORT=$myra_port" >> .env
      - echo "ADMIN_CONTAINER_NAME=$admin_container_name" >> .env
      - echo "ADMIN_PORT=$admin_port" >> .env
      - echo "EBANKING_CONTAINER_NAME=$ebank_container_name" >> .env
      - echo "EBANKING_PORT=$ebank_port" >> .env
      - echo "STORYBOOK_CONTAINER_NAME=$storybook_container_name" >> .env
      - echo "STORYBOOK_PORT=$storybook_port" >> .env
      - aws configure set aws_access_key_id $access_key
      - aws configure set aws_secret_access_key $secret_key
      - aws ecr get-login-password --region us-east-1 | docker login -u AWS --password-stdin 110278083494.dkr.ecr.us-east-1.amazonaws.com
      - docker-compose -f docker-compose.neosys.yml pull
      - docker-compose -f docker-compose.ebanking.yml pull
      - docker-compose -f docker-compose.myra.yml pull
      - docker-compose -f docker-compose.storybook.yml pull
      - docker-compose --project-name myra-ui-neosys-dev -f docker-compose.neosys.yml up --no-build --force-recreate -d
      - docker-compose --project-name myra-ui-ebanking-dev -f docker-compose.ebanking.yml up --no-build --force-recreate -d
      - docker-compose --project-name myra-ui-myra-dev -f docker-compose.myra.yml up --no-build --force-recreate -d
      - docker-compose --project-name myra-ui-storybook-dev -f docker-compose.storybook.yml up --no-build --force-recreate -d
      - echo UI deployed successfully
      - docker image prune -a -f || true
      - docker container prune -a -f || true
    when:
      branch:
        - dev
      event:
        - push

depends_on:
  - Build and Push myra-ui
  - Build and push myra-ui-admin
  - Build and push myra-ui-ebanking
